<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAGABoAwAAJgAAACAgAAAAABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnN//bdH/WMr/WMr/bdH/nN//AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAnN//UsX5Upe6VGx8VFxmVFxmVGx8Upe6UsX5nN//AAAAAAAAAAAAAAAAAAAA
        fdb/Usn/UbPhVUlKVUZGVUZGVUZGVUZGVUlKUbPhUsn/fdb/AAAAAAAAAAAAnN//Usn/Usn/Usn/U3mP
        VUZGVUZGVUZGVUZGU3mPUsn/Usn/Usn/nN//AAAAAAAAUsn/Usn/Usn/Usn/Ub7vVVBUVUZGVUZGVVBU
        Ub7vUsn/Usn/Usn/Usn/AAAAnN//Usn/Usn/Usn/Usn/ZNr9Y5eoalxcalxcY5eoZNr9Usn/Usn/Usn/
        Usn/nN//bdH/Usn/Usn/Usn/WtL/ZNr9ZNr9ZNr9ZNr9ZNr9ZNr9WtL/Usn/Usn/Usn/bdH/WMr/Usn/
        Usn/Usn/WtL/ZNr9ZNr9bXJ2bXJ2ZNr9ZNr9WtL/Usn/Usn/Usn/WMr/WMr/VF5oVUlKVUlKVUlKaGBh
        ZNr9bXJ2bXJ2ZNr9aGBhVUlKVUlKVUlKVF5oWMr/bdH/VGx8VUZGVUZGVUZGY1NSZ5SkZNr9ZNr9Z5Sk
        Y1NSVUZGVUZGVUZGVGx8bdH/nN//UpO0VUZGVUZGVUZGVUZGYoSRZNr9ZNr9YoSRVUZGVUZGVUZGVUZG
        UpO0nN//AAAAUsP3VVRaVUZGVUZGVVBUWcjyWtL/WtL/WcjyVVBUVUZGVUZGVVRaUsP3AAAAAAAAnN//
        UarUVUlKVUZGUpO0Usn/Usn/Usn/Usn/UpO0VUZGVUlKUarUnN//AAAAAAAAAAAAfdb/UarUVGx8UsX5
        Usn/Usn/Usn/Usn/UsX5VGx8UarUfdb/AAAAAAAAAAAAAAAAAAAAnN//Usn/Usn/Usn/Usn/Usn/Usn/
        Usn/Usn/nN//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnN//bdH/WMr/WMr/bdH/nN//AAAAAAAAAAAA
        AAAAAAAA+B8AAOAHAADAAwAAgAEAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAMAD
        AADgBwAA+B8AACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADM7v+W3f971f9pz/9Yyv9Yyv9pz/971f+W3f/M7v8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACW3f9Yyv9U
        zP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9Yyv+W3f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACj4/9UzP9UzP9UzP9QxftSoMZSiqZTfZRUbHxUbHxTfZRSiqZS
        oMZQxftUzP9UzP9UzP+j4/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB10/9U
        zP9UzP9RuutTfZRVUVZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVUVZTfZRRuutUzP9UzP910/8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjzv9UzP9UzP9UzP9ThJ5VRkZVRkZVRkZVRkZVRkZV
        RkZVRkZVRkZVRkZVRkZVRkZVRkZThJ5UzP9UzP9UzP9jzv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABjzv9UzP9UzP9UzP9UzP9RuutVS01VRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVS01RuutU
        zP9UzP9UzP9UzP9jzv8AAAAAAAAAAAAAAAAAAAAAAAAAAAB10/9UzP9UzP9UzP9UzP9UzP9UzP9Sh6NV
        RkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZSh6NUzP9UzP9UzP9UzP9UzP9UzP910/8AAAAAAAAA
        AAAAAAAAAACj4/9UzP9UzP9UzP9UzP9UzP9UzP9UzP9QxftUVVtVRkZVRkZVRkZVRkZVRkZVRkZVRkZV
        RkZUVVtQxftUzP9UzP9UzP9UzP9UzP9UzP9UzP+j4/8AAAAAAAAAAAAAAABUzP9UzP9UzP9UzP9UzP9U
        zP9UzP9UzP9UzP9Sm75VRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZSm75UzP9UzP9UzP9UzP9UzP9UzP9U
        zP9UzP9UzP8AAAAAAAAAAACW3f9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9YaHFVRkZVRkZV
        RkZVRkZVRkZVRkZYaHFUzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP+W3f8AAAAAAABYyv9UzP9U
        zP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9k3P9hvtpfUE9lVVRsXFtsXFtlVVRfUE9hvtpk3P9UzP9UzP9U
        zP9UzP9UzP9UzP9UzP9UzP9UzP9Yyv8AAADM7v9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9k3P9k
        3P9k3P9mcXdsXFtuY2NuY2NsXFtmcXdk3P9k3P9k3P9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP/M
        7v+W3f9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9k3P9k3P9k3P9k3P9k3P9k3P9k3P9k3P9k3P9k3P9k
        3P9k3P9k3P9k3P9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP+W3f971f9UzP9UzP9UzP9UzP9UzP9UzP9U
        zP9UzP9k3P9k3P9k3P9k3P9k3P9k3P9l1fZl1fZk3P9k3P9k3P9k3P9k3P9k3P9UzP9UzP9UzP9UzP9U
        zP9UzP9UzP9UzP971f9pz/9UzP9UzP9UzP9UzP9UzP9UzP9UzP9c1P9k3P9k3P9k3P9k3P9k3P9po7Vu
        Y2NuY2Npo7Vk3P9k3P9k3P9k3P9k3P9c1P9UzP9UzP9UzP9UzP9UzP9UzP9UzP9pz/9Yyv9UzP9UzP9U
        zP9UzP9UzP9UzP9UzP9c1P9k3P9k3P9k3P9k3P9l1fZuY2NsXFtsXFtuY2Nl1fZk3P9k3P9k3P9k3P9c
        1P9UzP9UzP9UzP9UzP9UzP9UzP9UzP9Yyv9Yyv9UzP9Td4xVS01VS01VS01VS01VS01VS01VS01sXFtl
        dX1k3P9l1fZuY2NsXFtsXFtuY2Nl1fZk3P9ldX1sXFtVS01VS01VS01VS01VS01VS01VS01Td4xUzP9Y
        yv9pz/9UzP9TcoRVRkZVRkZVRkZVRkZVRkZVRkZVRkZlVVRsXFtk3P9k3P9po7VuY2NuY2Npo7Vk3P9k
        3P9sXFtlVVRVRkZVRkZVRkZVRkZVRkZVRkZVRkZTcoRUzP9pz/971f9UzP9Sh6NVRkZVRkZVRkZVRkZV
        RkZVRkZVRkZfT05sXFtkf4pk3P9k3P9l1fZl1fZk3P9k3P9kf4psXFtfT05VRkZVRkZVRkZVRkZVRkZV
        RkZVRkZSh6NUzP971f+W3f9UzP9SncFVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZoV1ZsXFtkmapk3P9k
        3P9k3P9k3P9kmapsXFtoV1ZVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZSncFUzP+W3f/M7v9UzP9Qv/JV
        S01VRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZlVVRkhJBk3P9k3P9k3P9k3P9khJBlVVRVRkZVRkZVRkZV
        RkZVRkZVRkZVRkZVRkZVS01Qv/JUzP/M7v8AAABYyv9UzP9TfZRVRkZVRkZVRkZVRkZVRkZVRkZVRkZV
        RkZYXmRk3P9k3P9k3P9k3P9k3P9k3P9YXmRVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZTfZRUzP9Yyv8A
        AAAAAACW3f9UzP9RteNVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZdr8tk3P9k3P9k3P9k3P9k3P9k3P9d
        r8tVRkZVRkZVRkZVRkZVRkZVRkZVRkZVRkZRteNUzP+W3f8AAAAAAAAAAABUzP9UzP9TfZRVRkZVRkZV
        RkZVRkZVRkZVRkZUbHxUzP9UzP9c1P9c1P9c1P9c1P9UzP9UzP9UbHxVRkZVRkZVRkZVRkZVRkZVRkZT
        fZRUzP9UzP8AAAAAAAAAAAAAAACj4/9UzP9QxftUYWxVRkZVRkZVRkZVRkZVS01RteNUzP9UzP9UzP9U
        zP9UzP9UzP9UzP9UzP9RteNVS01VRkZVRkZVRkZVRkZUYWxQxftUzP+j4/8AAAAAAAAAAAAAAAAAAAB1
        0/9UzP9RuutVUVZVRkZVRkZVRkZThJ5UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9ThJ5VRkZV
        RkZVRkZVUVZRuutUzP910/8AAAAAAAAAAAAAAAAAAAAAAAAAAABjzv9UzP9RuutUYWxVRkZVUVZQwfVU
        zP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9QwfVVUVZVRkZUYWxRuutUzP9jzv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABjzv9UzP9QxftThJ5RochUzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9U
        zP9UzP9UzP9RochThJ5QxftUzP9jzv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB10/9U
        zP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP910/8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACj4/9UzP9UzP9UzP9UzP9UzP9UzP9UzP9U
        zP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP+j4/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACW3f9Yyv9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9UzP9Yyv+W3f8A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADM
        7v+W3f971f9pz/9Yyv9Yyv9pz/971f+W3f/M7v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/4Af//4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAAAAPAAAAD4AAAB/AAAA/4AAAf/AAAP/4A
        AH//gAH//+AH/w==
</value>
  </data>
</root>