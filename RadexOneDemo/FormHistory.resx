<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_btnStop1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKvSURBVDhPbVPLS1RhHD06M3eYUaKFijSF5mt8FU6ammJS
        Kb4VFxO+JTVQKRTaZElG2S6ixAiVbKHUon9gFMmVuDKRwjYphEHmazDTTBlPv/td7SEd+ODOfPece37n
        fB90uIC4l8DTt4BnEHhyGkhUG3/hIpA6AvTPACPPgIfhQJja0MmL/v4LDAoiExLI2FiuaNpSIZCvXhBc
        Ayq/2+0bzMsj6+vJtDTOmkyzx4ATeA300W4nXS7S7SabmsicHK5brd48IKcVuLxjs22zuZmcniYXFsih
        ITI+nreBOxBLbxgQQCYlkQUFZFUV2dqqRDY1bWtH03ysrCTHxsj5edLrJScmyKws9gGDkHl6aTaTYWHK
        mrJZU2OIZGQoIfb3kx4POTlJzs0ZDsLDeUN3EAckfARW1BiRkYZIfj5ZW0tlu6OD7OkxSKOj5PAwmZnJ
        d35+n48DUSqkbAnsA+Dd00UiIgwRfZy6OrKtjezqInt7ye5uldUUsHgKOK/IBzgLXJKNbz6bzRBJTycL
        C8nqarK9XQn5nE5OAMuRwLl92h8UAe73wPaeyURVqdSpMigqMqqTcfZSUjhjMq2nSDv7NAO5QMU08IMA
        1bJYyJAQVZU+L4uLyYYGsqVFOZuxWLxnAGlZcFLcjwObv8kHS9PI4GAyJsYQKS0lGxuNdlJT6TGbl+Ug
        OXFdutw4TN5fm1Lvlh5sdLTqnWVlhkhFBX+GhtIN3McDYHz3P2T9v+fA2rC429EPmgTI7GyyvJwsKSEd
        Dl4FXqAaeLR6iKwvIX8NBjKl6NxXUrEvMJCMiiKTk8nERK7Kb7lgt3BUbtVjYHZZSPpXdbEB4FOoOh4G
        nBKYOPmyJrnsCnHJauU9YMoGSAwCeXBIpJ1X5LpKI51HAKn6XwQBMSXA3QZg4AJw0w7IN4BfNbi7FhHY
        F68AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="m_saveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 17</value>
  </metadata>
  <metadata name="m_openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>278, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6urqAOvr6wC/qn0A8fHxANq6egC0k1EA7+/vANi7ggDGmT8ArIxLAO7u7gDp6ekA1tbWANra
        2gDr6ukA5uTfAOjm5ADs7OwA5+fnANLS0gDf398Aubm5AOnfzADs0p8A7NWnAOjk3ADm5uYA3d3dALi4
        uADTwJsA6bdTAM2sbADTrmMA7L1eAMK8sADX19cA5OTkAOi4WQDo2LkA8PDwAPLy8gDnxoUA58iKAOPj
        4wDg4OAA09PTANPRzQDjrkQAzsrDAN7KoADeuGwA3t7eAOLi4gDc3NwAxcXFANyxXADApXAAu7m0ANGo
        VQDUuogA2NjYAN/VwwDYqkwA2KlKANmnQgDRsmsApMziAOHh4gDZ2dkAtbW1ALWzsQC2q5UAvLOjAK/Q
        5QAjoPAAicPnAHW55AAdmegAocnjAKenpwCpqakAp6ipAEyTwABgmLwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABQUVFRUVFRUVFSU1QAAAAANTU1NTU1NTU1TU5PAAAAADVFRkZGR0hJSktMNQAAAAA1NTU1
        Pj9AQUJDRDUAAAAANTY3Nzg5HTo7PD01AAAAACwtLi8wMS4uMjM0LAAAAAAlJSUlJicoKSorJSUAAAAA
        GxwdHR4fICEiIyQbAAAAABMTExMTFxgZGhMTEwAAAAAMFRYWFhYWFhYWDgwAAAAAAgICAgICAgICAgIC
        AAAAABITFBQUFBQNEhISEgAAAAALDA0NDQ0NDgsPEBEAAAAABwcHBwcHBwcHCAkKAAAAAAQEBAQEBAQE
        BAUGAAAAAAABAgICAgICAgIDAAAAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAAwAcAAMAPAAA=
</value>
  </data>
</root>