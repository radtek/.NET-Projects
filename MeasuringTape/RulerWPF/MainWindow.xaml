<Window x:Class="RulerWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RulerWPF"
        mc:Ignorable="d"
        WindowStyle="None"
        ResizeMode="NoResize"
        WindowState="Maximized"
        AllowsTransparency="True"
        Topmost="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        Loaded="MainWindow_OnLoaded"
        LocationChanged="Window_LocationChanged"
        PreviewMouseMove="window_PreviewMouseMove"
        Title="Ruler" Height="600" Width="800">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Canvas x:Name="_canvasMain">
        <Canvas x:Name="_canvasRuler" Opacity="1.0" Background="Orange" Cursor="Hand" 
                RenderTransformOrigin="0.5,0.5"
                Width="400" Height="60"  Canvas.Left="600" Canvas.Top="400"
                MouseMove="_canvasRuler_MouseMove" >
            <Canvas.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="_rotateTransform" Angle="0"/>
                    <TranslateTransform x:Name="_moveTransform" />
                </TransformGroup>
            </Canvas.RenderTransform>
            <Canvas x:Name="_tics" />
            <TextBlock x:Name="_txtBounds" Canvas.Left="10" Canvas.Top="36" Text="X: 10, Y: 10, Length: 400" FontSize="16"/>
            <Thumb x:Name="thumbRotateLeft" Width="20" Height="20" Canvas.Left="10" Canvas.Top="20" 
                   Style="{StaticResource RoundThumbStyle}"
                   DragDelta="thumbRotateLeft_DragDelta" 
                   PreviewMouseLeftButtonDown="thumbRotateLeft_MouseLeftButtonDown" 
                   PreviewMouseLeftButtonUp="thumbRotateLeft_PreviewMouseLeftButtonUp"/>
            <Thumb x:Name="thumbRotateRight" Width="20" Height="20" Canvas.Left="375" Canvas.Top="30" 
                    Style="{StaticResource RoundThumbStyle}"
                   DragDelta="thumbRotateRight_DragDelta"/>
            <Button x:Name="btnClose" Width="20" Height="20" Canvas.Left="375" Canvas.Top="5" 
                    Background="AliceBlue" Opacity="0.7"
                    Content="X" Click="ButtonClose_Click"/>
            <Line x:Name="leftGrip" 
                  X1="3" 
                  Y1="0" 
                  X2="3" 
                  Y2="{Binding ActualHeight, ElementName=_canvasRuler}" 
                        StrokeThickness="6" Stroke="DarkGoldenrod"  
                        PreviewMouseLeftButtonDown="LeftGrip_OnPreviewMouseLeftButtonDown" 
                        PreviewMouseLeftButtonUp="LeftGrip_OnPreviewMouseLeftButtonUp">
                <Line.Style>
                    <Style TargetType="Line">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Opacity" Value="1.0"/>
                                <Setter Property="Cursor" Value="SizeWE"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Line.Style>
            </Line>
            <Line x:Name="rightGrip" ClipToBounds="False"
                        StrokeThickness="6" Stroke="DarkGoldenrod" Opacity="1"
                        X1="{Binding ActualWidth, ElementName=_canvasRuler}" 
                        Y1="0" 
                        X2="{Binding ActualWidth, ElementName=_canvasRuler}" 
                        Y2="{Binding ActualHeight, ElementName=_canvasRuler}" 
                        PreviewMouseLeftButtonDown="rightGrip_PreviewMouseLeftButtonDown" 
                        PreviewMouseLeftButtonUp="rightGrip_PreviewMouseLeftButtonUp">
                <Line.Style>
                    <Style TargetType="Line">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Opacity" Value="1.0"/>
                                <Setter Property="Cursor" Value="SizeWE"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Line.Style>
            </Line>
        </Canvas>
    </Canvas>
</Window>
